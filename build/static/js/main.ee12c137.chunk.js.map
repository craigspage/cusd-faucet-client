{"version":3,"sources":["assets/Github.svg","store/actions.js","store/reducers.js","store/store.js","withRoot.js","services/signMessage.js","services/recoverMessageSigner.js","components/HeaderMenu.js","components/Header.js","components/Accounts.js","components/helpers/EtherscanLogo.js","config.js","components/MintButton.js","services/getCUSD.js","services/updateUserBalance.js","components/Balances.js","services/sendCUSD.js","components/TransferButton.js","services/burnCUSD.js","components/BurnButton.js","components/InformationPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TYPES","PAGES","MAIN","INFO","actions","number","type","object","string","initialState","eth","user_address","balance_cusd","pending_mints","pending_transfers","pending_burns","global","web3","page","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","signMessage","dataToSign","from","Promise","resolve","reject","personal","sign","err","signature","recoverMessageSigner","_ref","asyncToGenerator","regenerator_default","mark","_callee","message","user","wrap","_context","prev","next","abrupt","accounts","recover","sent","stop","this","_x","_x2","_x3","apply","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToInfoPage","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick_Login","messageToSign","sig","signer","signing_in","getAccounts","amount_to_mint","window","setEthAddress","t0","console","error","alert","classes","AppBar_default","position","Toolbar_default","components_HeaderMenu","Typography_default","variant","className","grow","role","aria-label","Button_default","disabled","address","flexGrow","Accounts","_this$props","eth_address","user_short","substring","Paper_default","paper","elevation","href","target","rel","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","EtherscanLogo","etherscan","style","height","width","alt","src","Fragment","commonConfig","server_url_test","server_url_prod","MINTER_ENDPOINT","config","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","isAddress","log","amount","toString","minting","axios","get","minter_balance","post","data","concatPendingMints","map","i","key","helpers_EtherscanLogo","setWeb3","newMint","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","Balances","_updateUserBalance","setEthBalance","componentDidMount","_callee2","intervalId","_context2","setInterval","timer","_callee3","_context3","componentWillUnmount","clearInterval","sendCUSD","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","Math","estimateGas","t1","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x4","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","transferring","balance_relayer","concatPendingTransfers","handleChange","name","defineProperty","value","TextField_default","label","textField","onChange","margin","newTransfer","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","_web","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","InformationPage","section","textAlign","App","setWindowWeb3","ethereum","Web3","enable","currentProvider","root","components_Header","components_Accounts","components_MintButton","components_Balances","components_TransferButton","components_BurnButton","information","components_InformationPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee12c137.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Github.617870e4.svg\";","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_WEB3: \"SET_WEB3\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n  SET_PAGE: \"SET_PAGE\"\n};\n\nexport const PAGES = {\n  MAIN: 0,\n  INFO: 1\n}\n\nexport const actions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES, PAGES } from \"./actions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n  global: {\n    web3: '',\n    page: PAGES.MAIN,\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n// import logger from \"redux-logger\"; // Debuggin: prints redux actions to console\nimport { eth, global } from \"./reducers\";\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eth,\n  global,\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","// Request user to cryptographically sign a message\nexport const signMessage = (web3, dataToSign, from) => {\n    if (!web3) return;\n    return new Promise((resolve, reject) =>\n      web3.eth.personal.sign(\n        dataToSign,\n        from,\n        (err, signature) => {\n          if (err) return reject(err);\n          return resolve(signature);\n        }\n      )\n    );\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { actions, PAGES } from \"../store/actions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(actions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n  }\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// WEB3 Services\nimport { signMessage } from '../services/signMessage'\nimport { recoverMessageSigner } from '../services/recoverMessageSigner'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { actions } from \"../store/actions\";\n\n// Custom Components\nimport HeaderMenu from './HeaderMenu'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(actions.setEthAddress(address))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Ask user to authenticate their keypair\n  handleClick_Login = async () => {\n    this.setState({\n      signing_in: true\n    })\n    \n    let web3 = this.props.web3\n    if ( web3 ) {\n      try {\n        let accounts = await web3.eth.getAccounts()\n        let user = accounts[0]\n\n        let messageToSign = \"Welcome to the Carbon CUSD faucet! Please sign this message to verify that you are who you say you are, and we'll mint you \" \n                            + this.state.amount_to_mint \n                            + \" CUSD.\"\n        let sig = await signMessage(web3, messageToSign, user)\n        let signer = await recoverMessageSigner(\n          window.web3,\n          messageToSign,\n          sig\n        )\n        this.props.setEthAddress(signer)\n        this.setState({\n          signing_in: false\n        })\n      } catch (err) {\n        console.error('user could not sign message')\n        this.setState({\n          signing_in: false\n        })\n      }\n    } else {\n      // No web3 injected\n      alert('Cannot connect to Ethereum, are you using a dapp-enabled browser?')\n      this.setState({\n        signing_in: false\n      })\n      return\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Ropsten Faucet <span role=\"img\" aria-label=\"Sake\">🍶</span>\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <Button\n              onClick={this.handleClick_Login}\n              disabled={this.state.signing_in}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Sign In to Ethereum\n            </Button>\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n    } = this.props;\n\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography> \n                You are connected to Ethereum as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React, { Component } from 'react';\n\nclass EtherscanLogo extends Component {\n\n  render() {\n\n    const etherscan = (\n      <img\n        style={{ height: \"20px\", width: \"auto\" }}\n        alt=\"Etherscan\"\n        src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n      />\n    );\n\n    return (\n      <React.Fragment>\n          {etherscan}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EtherscanLogo;\n","const commonConfig = {\n    server_url_test: \"http://localhost:5000/\",\n    server_url_prod: \"https://cusd-faucet-server-ropsten.herokuapp.com/\"\n};\n\nexport default commonConfig","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { actions } from \"../store/actions\";\n\n// Custom Components\nimport EtherscanLogo from './helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../config\"\nconst SERVER = config.server_url_prod\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(actions.setWeb3(web3)),\n  setEthAddress: address => dispatch(actions.setEthAddress(address)),\n  concatPendingMints: newMint => dispatch(actions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n        let response = await axios.post(\n          MINTER_ENDPOINT,\n          post_data\n        );\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n  }","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { actions } from \"../store/actions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../services/updateUserBalance'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(actions.setEthBalance(balance))\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        this.props.setEthBalance(short_balance)\n    }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n    // Update user balance\n    await this._updateUserBalance(this.props.eth_address)\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            <Typography> \n              Your CUSD balance: {balance_cusd}\n            </Typography>\n          </Paper>\n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { actions } from \"../store/actions\";\n\n// Custom Components\nimport EtherscanLogo from './helpers/EtherscanLogo'\n\n// WEB3 Services\nimport { sendCUSD } from '../services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../config\"\nconst SERVER = config.server_url_prod\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(actions.setWeb3(web3)),\n  setEthAddress: address => dispatch(actions.setEthAddress(address)),\n  concatPendingTransfers: newTransfer => dispatch(actions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        // TODO: Each pending transfer should have a Number:transfer_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        alert('Please sign the transfer metatransaction, and we will pay for your ETH gas fees to send CUSD!')\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer)\n        // console.log('metatransfer: ', post_data)\n\n        let response = await axios.post(\n          RELAYER_ENDPOINT,\n          post_data\n        );\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n        {/* TRANSFER CUSD  */}\n            { !eth_address ?\n            (\n            <Button disabled>Please sign in trade CUSD!</Button>\n            )\n            : (\n            <div>\n            <form>\n                <TextField\n                id=\"transfer-to\"\n                label=\"Transfer To\"\n                className={classes.textField}\n                value={this.state.transfer_to}\n                onChange={this.handleChange('transfer_to')}\n                margin=\"normal\"\n                />\n                <TextField\n                id=\"transfer-amount\"\n                label=\"Amount\"\n                type=\"number\"\n                className={classes.textField}\n                value={this.state.amount_to_transfer}\n                onChange={this.handleChange('amount_to_transfer')}\n                margin=\"normal\"\n                />\n            </form>\n            <Button\n                onClick={this.handleClick_Transfer}\n                disabled={\n                this.state.transferring ||\n                !this.state.transfer_to ||\n                isNaN(this.state.amount_to_transfer) ||\n                this.state.amount_to_transfer <= 0\n                }\n                variant=\"contained\"\n                color=\"secondary\"\n            >\n                Transfer {this.state.amount_to_transfer ? this.state.amount_to_transfer : \"\"} CUSD\n            </Button>\n            </div>\n            )\n            }\n        {/* TRANSFER TXNS  */}\n        { pending_transfers.length > 0 ? (\n        <div>\n            <Typography> \n            Your transfer transactions: \n            </Typography>\n            {pending_transfers.map((pending_hash, i) => {\n            return (<Typography key={i}> \n                <EtherscanLogo /> ({i}): \n                <a\n                href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                >\n                {\" track on Etherscan\"}\n                </a>\n            </Typography>)\n            })}\n        </div> ) : (\"\")}\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { actions } from \"../store/actions\";\n\n// Custom Components\nimport EtherscanLogo from './helpers/EtherscanLogo'\n\n// WEB3 Services\nimport { burnCUSD } from '../services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url_prod\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(actions.setWeb3(web3)),\n  setEthAddress: address => dispatch(actions.setEthAddress(address)),\n  concatPendingBurns: newBurn => dispatch(actions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let web3 = window.web3\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        alert('Please sign the burn metatransaction, and we will pay for your ETH gas fees to redeem CUSD!')\n        let post_data = await burnCUSD(web3, from, amountToBurn)\n\n        let response = await axios.post(\n          RELAYER_ENDPOINT,\n          post_data\n        );\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={this.state.amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    this.state.burning ||\n                    isNaN(this.state.amount_to_burn) ||\n                    this.state.amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {this.state.amount_to_burn ? this.state.amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Icons\nimport Github from \"../assets/Github.svg\";\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a True Digital Economy</b>: This is our cross-chain open-source wallet initiative where we intend to link user \n                identities (used for \"Know Your Customer\" compliance) with on-chain accounts across \n                multiple networks. Since this is a work in progress, for now we are only supporting\n                the Ropsten testnet for Ethereum. \n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Ropsten Faucet</b>: Mint, transfer, and \"redeem\" CUSD via our faucet! CUSD on Ropsten is a super convenient token <i>made for developers</i> that\n                any cryptonetwork experiment will find useful. You can be confident knowing that one mainnet CUSD is equivalent to $1, which \n                should make forecasting simpler 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>MetaTransactions</b>: We are excited to offer \"metatransactions\", where users do not need to hold any ETH to pay for transaction fees\n                when using CUSD. We pay your ETH gas fees, you compensate us in CUSD, and no one needs to hodl trivial amounts of ETH anymore 🧞‍\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { actions } from \"./store/actions\";\n\n// WEB3 Services\nimport Web3 from 'web3';\n\n// Core Wallet Components\nimport Header from './components/Header'\nimport Accounts from './components/Accounts'\nimport MintButton from './components/MintButton'\nimport Balances from './components/Balances'\nimport TransferButton from './components/TransferButton'\nimport BurnButton from './components/BurnButton'\nimport InformationPage from './components/InformationPage'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  web3: state.global.web3,\n  page: state.global.page,\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(actions.setWeb3(web3)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** WEB3 RELATED SERVICE FUNCTIONS */\n  \n  // Detect or set window.web3 ethereum connection\n  setWindowWeb3 = async () => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            \n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n        } catch (error) {\n            // User denied account access...\n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n    }\n    // Non-dapp browsers...\n    else {\n        alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  /** BEGINNING OF MOUNT */\n  componentDidMount = async () => {\n    // Request user's web3 connection\n    await this.setWindowWeb3() \n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === 0 ? (\n          <div className={classes.main}>\n            {/* USER IDENTITY  */}\n            <Accounts />\n            {/* MINT */}\n            <MintButton />\n            {/* USER BALANCES  */}\n            <Balances />\n            {/* TRANSFER */}\n            <TransferButton />\n            {/* BURN */}\n            <BurnButton />\n          </div>\n        ): (\"\")}\n        { page === 1 ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}