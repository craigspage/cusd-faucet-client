{"version":3,"sources":["store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/store.js","withRoot.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginEthereum.js","components/Header.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","config.js","components/homePageComponents/MintButton.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","components/homePageComponents/Balances.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","components/helpers/Loading.js","components/accountsComponents/NewEthAccountDialog.js","eth_services/encryptAccount.js","eth_services/getJsonAddress.js","db_services/saveAccountToUser.js","components/accountsComponents/EthAccounts.js","components/helpers/BloksLogo.js","components/accountsComponents/EosAccounts.js","db_services/saveUser.js","components/accountsComponents/IdentityDialog.js","components/AccountsPage.js","components/InformationPage.js","App.js","serviceWorker.js","index.js"],"names":["TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","globalActions","number","global","web3","page","username","NETWORKS","ETH","EOS","accountsActions","account","eth_accounts","eos_accounts","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","logger","thunk","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","this","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","_ref","asyncToGenerator","regenerator_default","mark","_callee","dataToSign","from","signer_wallet","privateKey","sig","wrap","_context","prev","next","abrupt","sign","signature","Promise","resolve","reject","personal","err","stop","_x","_x2","_x3","_x4","apply","recoverMessageSigner","message","user","recover","sent","createSignerWallet","decryptedJson","ethers","Wallet","findWalletFromAddress","address","array","i","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","wallet","unlockedAccount","value","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","unlocking","console","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","substring","DialogActions_default","Button_default","LoginEthereum","handleClick_LoginMenu","loginMetaMask","messageToSign","signer","signing_in","alert","getAccounts","window","t0","loginCarbonWallet","openSelectDialog","logout","closeSelectDialog","_this$state","disabled","variant","headerComponents_SelectAccountEthereum","Header","short_name","AppBar_default","position","Toolbar_default","headerComponents_HeaderMenu","Typography_default","className","grow","role","headerComponents_LoginEthereum","NUMBER","flexGrow","Accounts","eth_address","user_short","Paper_default","paper","elevation","href","rel","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","EtherscanLogo","style","height","width","alt","src","commonConfig","server_url","infura_public_key","MINTER_ENDPOINT","config","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","amount_to_mint","isAddress","amount","toString","minting","axios","get","minter_balance","post","data","concatPendingMints","t1","helpers_EtherscanLogo","newMint","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","Balances","_updateUserBalance","setEthBalance","componentDidMount","_callee2","intervalId","_context2","setInterval","timer","_callee3","_context3","componentWillUnmount","clearInterval","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","Math","estimateGas","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","log","transferring","balance_relayer","concatPendingTransfers","handleChange","TextField_default","textField","margin","newTransfer","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","HomePage","homePageComponents_Accounts","homePageComponents_MintButton","homePageComponents_Balances","homePageComponents_TransferButton","homePageComponents_BurnButton","callback_encrypt","progress","percentComplete","parseInt","createAccount","password","randomWallet","encryptedJson","createRandom","encrypt","Loading","NewEthAccountDialog","generateNewAccount","network","new_account_json","creating_account","createAccount_eth","addEthAccount","aria-labelledby","helpers_Loading","CircularProgress_default","disableShrink","facebook2","size","thickness","newAccount","animationDuration","left","encryptAccount","wallet_json","getJsonAddress","getJsonWalletAddress","WALLETS_ENDPOINT","saveAccountToUser","db_post_response","EthAccounts","handleClick_AddEthAccount","open_new_account_dialog","handleClose_AddEthAccount","saveAccount","_ref2","new_account_index","identityToAssociateWithAccount","new_account","encrypted_json","address_from_encrypted_json","save_data_result","saving","createEncryptedWallet","public_key","JSON","stringify","section","Save_default","accountsComponents_NewEthAccountDialog","textAlign","BloksLogo","EosAccounts","handleClick_AddEosAccount","addEosAccount","helpers_BloksLogo","USERS_ENDPOINT","saveUser","IdentityDialog","new_username","new_password","confirm_password","setUsername","signInOldAccount","toggleSignInDialog","showSignIn","openSignInDialog","canCreateNew","canSignIn","DialogContentText_default","Switch_default","checked","autoFocus","fullWidth","AccountsPage","generateNewIdentity","openIdentityDialog","closeIdentityDialog","wallet_name","Tooltip_default","title","placement","Add_default","accountsComponents_IdentityDialog","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","App","setWindowWeb3","WEB_3_NODE","non_provider_web3","ethereum","Web3","enable","setWeb3","currentProvider","providers","WebsocketProvider","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db1b8893.chunk.js","sourcesContent":["// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_WEB3: \"SET_WEB3\",\n  SET_PAGE: \"SET_PAGE\",\n  SET_USERNAME: \"SET_USERNAME\"\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n\n  setUsername: string => ({\n    type: TYPES.SET_USERNAME,\n    string\n  }), \n  // Set User identity key: 'username'\n};\n\n","import { TYPES, PAGES } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    page: PAGES.MAIN,\n    username: '',\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    case TYPES.SET_USERNAME:\n      return Object.assign({}, state, {\n        username: action.string\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(logger, thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton> \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n});\n\nconst findWalletFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i]\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let wallet = findWalletFromAddress(selectedAddress, this.props.eth_accounts)\n    let unlockedAccount = wallet\n\n    try {\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n        })\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n    } = this.state\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={onCloseHandler} color=\"primary\">\n                Cancel\n            </Button>\n            <Button \n                onClick={this.signInToSelectedAccount} \n                color=\"primary\"\n            >\n                Unlock\n            </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nclass LoginEthereum extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD */\n  handleClick_LoginMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** LOGIN HANDLERS */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( !web3 ) {\n      // No web3 injected\n      alert('we cannot detect your web3, sorry')\n      this.setState({\n        signing_in: false\n      })\n    }\n    try {\n      let accounts = await web3.eth.getAccounts()\n      let user = accounts[0]\n\n      let messageToSign = \"I am cryptograhically signing this message\" \n\n      let sig = await signMessage(web3, messageToSign, user)\n      let signer = await recoverMessageSigner(\n        window.web3,\n        messageToSign,\n        sig\n      )\n      this.props.setEthAddress(signer)\n      this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n      this.setState({\n        signing_in: false\n      })\n    } catch (err) {\n      alert('if you do not have an Ethereum account, get a free burner account at \"Accounts\"')\n      console.error('signature failed')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('No accounts detected')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    return (\n        <div>\n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        </div>\n    );\n  }\n}\n\nLoginEthereum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginEthereum)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from '../store/globalActions'\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginEthereum from './headerComponents/LoginEthereum'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  user_address: state.eth.user_address\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: NUMBER => dispatch(globalActions.setPage(NUMBER))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n  \n  render() {\n    const { \n      classes, \n      user_address \n    } = this.props;\n\n    const short_name = user_address ? user_address.substring(0,8) : \"\"\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                Ropsten Faucet \n                <Button \n                  onClick={this.goToMainPage}\n                >\n                  <span role=\"img\" aria-label=\"Sake\">\n                  🍶\n                  </span>\n                </Button> \n                {short_name}\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginEthereum />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n    } = this.props;\n\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography> \n                You are connected to Ethereum as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n\n);\n\nexport default EtherscanLogo;\n","const commonConfig = {\n    server_url: \"http://localhost:5000/\",\n    // server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\",\n    infura_public_key: \"c7b70fc4ec0e4ca599e99b360894b699\"\n}\n\nexport default commonConfig","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        // API CALL\n        let response\n        try {\n          response = await axios.post(\n            MINTER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            minting: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n  }","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance))\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        this.props.setEthBalance(short_balance)\n    }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n    // Update user balance\n    await this._updateUserBalance(this.props.eth_address)\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            <Typography> \n              Your CUSD balance: {balance_cusd}\n            </Typography>\n          </Paper>\n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        // TODO: Each pending transfer should have a Number:transfer_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            transferring: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n        \n        let response\n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            transferring: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n        {/* TRANSFER CUSD  */}\n            { !eth_address ?\n            (\n            <Button disabled>Please sign in trade CUSD!</Button>\n            )\n            : (\n            <div>\n            <form>\n                <TextField\n                id=\"transfer-to\"\n                label=\"Transfer To\"\n                className={classes.textField}\n                value={this.state.transfer_to}\n                onChange={this.handleChange('transfer_to')}\n                margin=\"normal\"\n                />\n                <TextField\n                id=\"transfer-amount\"\n                label=\"Amount\"\n                type=\"number\"\n                className={classes.textField}\n                value={this.state.amount_to_transfer}\n                onChange={this.handleChange('amount_to_transfer')}\n                margin=\"normal\"\n                />\n            </form>\n            <Button\n                onClick={this.handleClick_Transfer}\n                disabled={\n                this.state.transferring ||\n                !this.state.transfer_to ||\n                isNaN(this.state.amount_to_transfer) ||\n                this.state.amount_to_transfer <= 0\n                }\n                variant=\"contained\"\n                color=\"secondary\"\n            >\n                Transfer {this.state.amount_to_transfer ? this.state.amount_to_transfer : \"\"} CUSD\n            </Button>\n            </div>\n            )\n            }\n        {/* TRANSFER TXNS  */}\n        { pending_transfers.length > 0 ? (\n        <div>\n            <Typography> \n            Your transfer transactions: \n            </Typography>\n            {pending_transfers.map((pending_hash, i) => {\n            return (<Typography key={i}> \n                <EtherscanLogo /> ({i}): \n                <a\n                href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                >\n                {\" track on Etherscan\"}\n                </a>\n            </Typography>)\n            })}\n        </div> ) : (\"\")}\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response \n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            burning: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={this.state.amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    this.state.burning ||\n                    isNaN(this.state.amount_to_burn) ||\n                    this.state.amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {this.state.amount_to_burn ? this.state.amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Core Wallet Components\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\n\nconst styles = theme => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    return (\n          <div>\n            {/* USER IDENTITY  */}\n            <Accounts />\n            {/* MINT */}\n            <MintButton />\n            {/* USER BALANCES  */}\n            <Balances />\n            {/* TRANSFER */}\n            <TransferButton />\n            {/* BURN */}\n            <BurnButton />\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(withStyles(styles)(HomePage));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = randomWallet\n    if (password) {\n        encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default createAccount","import React from 'react';\n\n\nconst Loading = () => (\n    <div>...</div>\n);\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewEthAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth()\n\n            this.props.addEthAccount(new_account_json)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management coming imminently')\n        } else {\n            alert('Sorry, we are looking to implement this network soon!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            creating_account\n        } = this.state\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new burner wallet?</DialogTitle>\n                    <DialogContent>\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewEthAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewEthAccountDialog)));\n","/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Encrypt JSON wallet\n// @param password Password used to encrypt JSON wallet\nconst encryptAccount = async (password, wallet_json) => {\n    console.log(password, wallet_json)\n    let encryptedJson\n    if (wallet_json) {\n        encryptedJson = await wallet_json.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default encryptAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst WALLETS_ENDPOINT = SERVER+\"api/accounts/wallets\"\n\nconst saveAccountToUser = async (post_data) => {\n    try {\n        // let db_get_response = await axios.get(\n        //     WALLETS_ENDPOINT\n        // )\n        let db_post_response = await axios.post(\n            WALLETS_ENDPOINT,\n            post_data\n          );\n        return db_post_response; \n    } catch(err) {\n        console.log('unable to connect to wallets database: ', WALLETS_ENDPOINT)\n    }\n    \n}\n\nexport default saveAccountToUser","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Save from '@material-ui/icons/Save';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewEthAccountDialog from './NewEthAccountDialog'\n\n// Wallet management helpers\nimport createEncryptedWallet from '../../eth_services/encryptAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\nimport saveAccountToUser from '../../db_services/saveAccountToUser'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n  facebook2: {\n    color: '#6798e5',\n    animationDuration: '550ms',\n    position: 'absolute',\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n  username: state.global.username\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false,\n      password: 'CHANGE_THIS_PASSWORD',\n      saving: false\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  // Encrypt wallet data with user's password\n  saveAccount = async (new_account_index) => {\n    let identityToAssociateWithAccount = this.props.username\n    let new_account = (\n      new_account_index < this.props.eth_accounts.length \n      ? this.props.eth_accounts[new_account_index] \n      : null)\n    let password = this.state.password\n\n    if (identityToAssociateWithAccount && new_account) {\n      \n      // Encrypt json wallet\n      try {\n        this.setState({\n          saving: true\n        })\n\n        // Set up body of API request\n        let encrypted_json = await createEncryptedWallet(password, new_account)\n        let address_from_encrypted_json = getJsonAddress(encrypted_json)\n        let post_data = {\n          user: identityToAssociateWithAccount,\n          network: '0', // ETH = 0, EOS = 1\n          public_key: address_from_encrypted_json,\n          wallet: JSON.stringify(encrypted_json)\n        }\n        console.log('data to post: ', post_data)\n        let save_data_result = await saveAccountToUser(post_data)\n        console.log('React now can use this data: ', save_data_result)\n        this.setState({\n          saving: false\n        })\n\n  \n      } catch (err) {\n        console.log('ERROR: could not save wallet data')\n        this.setState({\n          saving: false\n        })\n        return\n      }\n\n    } else {\n      alert('cannot save to this account')\n      return\n    }\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n      username\n    } = this.props;\n    const {\n      open_new_account_dialog,\n      saving\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Wallets</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                    {username && (\n                      <Button\n                        onClick={() => this.saveAccount(i)}\n                      >\n                        {saving ? \n                        (<CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />) : \n                        (\n                          <Save />\n                        )}\n                      </Button>\n                    )}\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewEthAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Wallets</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","// REST API server\nimport axios from 'axios'\nimport config from '../config'\nconst SERVER = config.server_url\nconst USERS_ENDPOINT = SERVER+\"api/accounts/users\"\n\nconst saveUser = async (post_data) => {\n    try {\n        // let db_get_response = await axios.get(\n        //     USERS_ENDPOINT\n        // )\n        let db_post_response = await axios.post(\n            USERS_ENDPOINT,\n            post_data\n          );\n        return db_post_response; \n    } catch(err) {\n        console.log('unable to connect users accounts database: ', USERS_ENDPOINT)\n    }\n    \n}\n\nexport default saveUser","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\n// REST API Calls\nimport saveUser from '../../db_services/saveUser'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions } from '../../store/globalActions';\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    setUsername: name => dispatch(globalActions.setUsername(name))\n});\n\nclass IdentityDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            confirm_password: '',\n            creating_account: false,\n            openSignInDialog: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    // Create a brand new identity\n    generateNewAccount = async () => {\n        let new_username = this.state.username\n        let new_password = this.state.password\n        let confirm_password = this.state.confirm_password\n\n        // 1. Add username + password hash object to database if username doesn't exist\n        let isValidAccount = Boolean(\n            new_username && \n            new_password &&\n            confirm_password &&\n            (new_password === confirm_password)\n        )\n\n        if (!isValidAccount) {\n            alert('cannot create this account')\n            return\n        }\n\n        // Save User to database\n        try {\n            this.setState({\n                creating_account: true\n            })\n            let post_data = {\n                user: new_username,\n                password: new_password, \n            }\n            console.log('post data: ', post_data)\n            let save_data_result = await saveUser(post_data)\n            console.log('React now can use this data: ', save_data_result)\n            this.setState({\n                creating_account: false\n            })\n\n            // 2. Fetch username to global Redux state\n            this.props.setUsername(new_username)\n            // Close\n            this.props.onCloseHandler()\n            return\n        } catch (err) {\n            console.log('ERROR: could not save user data')\n            this.setState({\n                creating_account: false\n            })\n            return\n        }\n    }\n\n    // Sign in to an existing identity \n    signInOldAccount = async () => {\n        // 1. Try to log in with username+password on database\n        let login_success = false\n        if (!login_success) {\n            alert('could not log in')\n            return\n        }\n        // 2. Fetch username to global Redux state\n            // This should also decrypt all encrypted wallet files with the user's password\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    // Switch between sign in and new account dialogs\n    toggleSignInDialog = () => {\n        let showSignIn = this.state.openSignInDialog\n        this.setState({\n            openSignInDialog: !showSignIn\n        })\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            username,\n            password,\n            confirm_password,\n            creating_account,\n            openSignInDialog\n        } = this.state\n\n        const canCreateNew = Boolean(username && password && confirm_password && (password === confirm_password))\n        const canSignIn = Boolean(username && password)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Accounts</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        <FormControlLabel\n                            control={\n                            <Switch\n                                checked={openSignInDialog}\n                                onChange={this.toggleSignInDialog}\n                                value=\"openSignInDialog\"\n                                color=\"primary\"\n                            />\n                            }\n                            label=\"Already have an account?\"\n                        />\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"name\"\n                        onChange={this.handleChange('username')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {!openSignInDialog ? (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />) : (\"\")}\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={openSignInDialog ? this.signInOldAccount : this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={openSignInDialog ? !(canSignIn) : !(canCreateNew) }\n                    >\n                        {openSignInDialog ? \"Sign in\" : \"Create\"}\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nIdentityDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(IdentityDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\nimport IdentityDialog from './accountsComponents/IdentityDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  username: state.global.username\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIdentityDialog: false\n    };\n  }\n\n  generateNewIdentity = () => {\n    this.setState({\n      openIdentityDialog: true\n    })\n  }\n\n  closeIdentityDialog = () => {\n    this.setState({\n      openIdentityDialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      username\n    } = this.props;\n    const {\n      openIdentityDialog\n    } = this.state;\n\n    const wallet_name = (username ? username+\"'s Account\" : \"No Account\")\n    const hover_text = \"These burner wallets will self-destruct when you leave the page unless you choose to save them to your account\"\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Tooltip title={hover_text} placement=\"top\">\n              <Typography variant=\"subtitle1\" className={classes.section}> \n                  <Button \n                    color=\"primary\" \n                    aria-label=\"New Account\"\n                    onClick={this.generateNewIdentity}\n                  >\n                    <AddIcon />\n                    {wallet_name}\n                  </Button>\n              </Typography>\n            </Tooltip>\n            <IdentityDialog open={openIdentityDialog} onCloseHandler={this.closeIdentityDialog} />\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a Global Digital Market</b>: This is the embodiment of our cross-chain open-source wallet initiative where we intend to link user \n                identities with cryptonetwork accounts. We support: Ethereum, EOS.\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Ropsten Faucet</b>: Mint, transfer, and redeem CUSD via our token faucet. CUSD on Ropsten was <i>made for developers</i> and experimental minds \n                curious how cryptoeconomics succeed at scale. Being able to assume that 1 CUSD == $1 will make fiscal forecasting simpler. 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>MetaTransactions</b>: We are powered by \"metatransactions\", in which users do not have to pay ETH transaction fees on this portal.  We pay your ETH gas fees, you pay us back in CUSD. 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No cryptonetwork account? No problem, you can create a <i>burner</i> account\n                through our management portal. We will <b>never</b> store your keys or passwords because these burner accounts were designed to self-destruct.\n                For top security, move CUSD to a more secure cold-storage wallet like Scatter or Metamask! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"./store/globalActions\";\n\n// WEB3 Services\nimport Web3 from 'web3';\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\n\n// Config \nimport config from './config'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  web3: state.global.web3,\n  page: state.global.page,\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** SET UP WEB3 */\n  // Detect or set window.web3 ethereum connection\n  setWindowWeb3 = async () => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            \n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n        } catch (error) {\n            // User denied account access...\n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n    }\n    // Non-dapp browsers...\n    else {\n        var WEB_3_NODE = ('wss://ropsten.infura.io/ws/v3/'+config.infura_public_key)\n        let non_provider_web3 = new Web3(new Web3.providers.WebsocketProvider(WEB_3_NODE));\n        this.props.setWeb3(non_provider_web3)\n    }\n  }\n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n    // Request user's web3 connection\n    await this.setWindowWeb3() \n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}