{"version":3,"sources":["store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/store.js","withRoot.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","components/helpers/Loading.js","eth_services/unlockAccount.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginEthereum.js","components/Header.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","config.js","components/homePageComponents/MintButton.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","components/homePageComponents/Balances.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","eth_services/getJsonAddress.js","components/accountsComponents/NewEthAccountDialog.js","components/accountsComponents/EthAccounts.js","components/helpers/BloksLogo.js","components/accountsComponents/EosAccounts.js","components/accountsComponents/NewIdentityDialog.js","components/AccountsPage.js","components/InformationPage.js","App.js","serviceWorker.js","index.js"],"names":["TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","globalActions","number","global","web3","page","NETWORKS","ETH","EOS","accountsActions","account","eth_accounts","eos_accounts","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","this","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","_ref","asyncToGenerator","regenerator_default","mark","_callee","dataToSign","from","signer_wallet","privateKey","sig","wrap","_context","prev","next","abrupt","sign","signature","Promise","resolve","reject","personal","err","stop","_x","_x2","_x3","_x4","apply","recoverMessageSigner","message","user","recover","sent","Loading","callback_decrypt","progress","percentComplete","parseInt","console","log","unlockWallet","encryptedJsonFile","password","data","ethers","Wallet","fromEncryptedJson","t0","createSignerWallet","decryptedJson","findWalletFromAddress","address","array","i","wallet","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","wallet_json","unlockedAccount","value","json","unlocking","password_error","encrypted","unlockAccountEth","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","t1","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","_this$state","selectFormHelperText","substring","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","TextField_default","autoFocus","margin","fullWidth","helperText","DialogActions_default","helpers_Loading","Button_default","disabled","CircularProgress_default","variant","disableShrink","className","facebook2","size","thickness","animationDuration","position","left","LoginEthereum","handleClick_LoginMenu","loginMetaMask","messageToSign","signer","signing_in","alert","getAccounts","window","loginCarbonWallet","openSelectDialog","logout","closeSelectDialog","headerComponents_SelectAccountEthereum","Header","short_name","AppBar_default","Toolbar_default","headerComponents_HeaderMenu","Typography_default","grow","role","headerComponents_LoginEthereum","NUMBER","flexGrow","Accounts","eth_address","user_short","Paper_default","paper","elevation","href","rel","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","EtherscanLogo","style","height","width","alt","src","commonConfig","server_url","infura_public_key","MINTER_ENDPOINT","config","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","amount_to_mint","isAddress","amount","toString","minting","axios","get","minter_balance","post","concatPendingMints","helpers_EtherscanLogo","newMint","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","Balances","_updateUserBalance","setEthBalance","componentDidMount","_callee2","intervalId","_context2","setInterval","timer","_callee3","_context3","componentWillUnmount","clearInterval","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","Math","estimateGas","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","transferring","balance_relayer","concatPendingTransfers","handleChange","textField","newTransfer","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","HomePage","homePageComponents_Accounts","homePageComponents_MintButton","homePageComponents_Balances","homePageComponents_TransferButton","homePageComponents_BurnButton","callback_encrypt","createAccount","randomWallet","encryptedJson","createRandom","encrypt","getJsonAddress","getJsonWalletAddress","NewEthAccountDialog","generateNewAccount","network","account_password","new_account_json","new_eth_address","new_account","creating_account","createAccount_eth","addEthAccount","confirm_password","validPassword","aria-labelledby","DialogContentText_default","newAccount","EthAccounts","handleClick_AddEthAccount","open_new_account_dialog","handleClose_AddEthAccount","section","accountsComponents_NewEthAccountDialog","textAlign","BloksLogo","EosAccounts","handleClick_AddEosAccount","addEosAccount","helpers_BloksLogo","NewIdentityDialog","username","validUsername","AccountsPage","generateNewIdentity","openIdentityDialog","closeIdentityDialog","Tooltip_default","title","placement","Add_default","accountsComponents_NewIdentityDialog","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","App","setWindowWeb3","WEB_3_NODE","non_provider_web3","ethereum","Web3","enable","setWeb3","currentProvider","providers","WebsocketProvider","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff3dfb6d.chunk.js","sourcesContent":["// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_WEB3: \"SET_WEB3\",\n  SET_PAGE: \"SET_PAGE\"\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n};\n\n","import { TYPES, PAGES } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    page: PAGES.MAIN,\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n// import logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page,\n  web3: state.global.web3\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton> \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import React from 'react';\n\n\nconst Loading = () => (\n    <div>...</div>\n);\n\nexport default Loading;\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\nfunction callback_decrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Decrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Decrypt walletJSON file with password\nconst unlockWallet = async (encryptedJsonFile, password) => {\n    try {\n        let data = encryptedJsonFile\n        return await ethers.Wallet.fromEncryptedJson(data, password, callback_decrypt)\n    } catch(err) {\n        throw err\n    }\n}\n\nexport default unlockWallet","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// JSX Helpers\nimport Loading from '../helpers/Loading'\n\n// Unlock an account with a password\nimport unlockAccountEth from '../../eth_services/unlockAccount'\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n\nconst findWalletFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i].wallet\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n      password: '',\n      unlocking: false,\n      password_error: false\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let password = this.state.password\n    let wallet = findWalletFromAddress(selectedAddress, this.props.eth_accounts)\n    let wallet_json = wallet.json\n\n    try {\n        this.setState({\n            unlocking: true,\n            password_error: false\n        })\n        let unlockedAccount = (\n            wallet.encrypted === true ? \n            await unlockAccountEth(wallet_json, password) \n            : wallet_json\n        )\n        this.setState({\n            unlocking: false\n        })\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n            password_error: true\n        })\n        // Alert user that wrong password\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n        unlocking,\n        password_error\n    } = this.state\n    const selectFormHelperText = (\n        password_error ? \n        \"incorrect password\" : \n        \"password for: \" + value.substring(0,12)+ \"...\"\n    )\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n          {value && (<TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={this.handleChangeForm('password')}\n            fullWidth\n            helperText={selectFormHelperText}\n          />)}\n        </DialogContent>\n        <DialogActions>\n          { unlocking ? <Loading /> :\n          (<Button onClick={onCloseHandler} color=\"primary\">\n            Cancel\n          </Button>) \n          }\n          { unlocking ?\n            (<Button\n                disabled\n                color=\"primary\"\n            >\n                <CircularProgress\n                    variant=\"indeterminate\"\n                    disableShrink\n                    className={classes.facebook2}\n                    size={24}\n                    thickness={4}\n                />\n            </Button>) \n            : \n            (<Button \n                onClick={this.signInToSelectedAccount} \n                color=\"primary\"\n            >\n                Unlock\n            </Button>)\n          }\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nclass LoginEthereum extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD */\n  handleClick_LoginMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** LOGIN HANDLERS */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( !web3 ) {\n      // No web3 injected\n      alert('we cannot detect your web3, sorry')\n      this.setState({\n        signing_in: false\n      })\n    }\n    try {\n      let accounts = await web3.eth.getAccounts()\n      let user = accounts[0]\n\n      let messageToSign = \"I am cryptograhically signing this message\" \n\n      let sig = await signMessage(web3, messageToSign, user)\n      let signer = await recoverMessageSigner(\n        window.web3,\n        messageToSign,\n        sig\n      )\n      this.props.setEthAddress(signer)\n      this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n      this.setState({\n        signing_in: false\n      })\n    } catch (err) {\n      alert('if you do not have an Ethereum account, get a free burner account at \"Accounts\"')\n      console.error('signature failed')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('No accounts detected')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    return (\n        <div>\n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        </div>\n    );\n  }\n}\n\nLoginEthereum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginEthereum)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from '../store/globalActions'\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginEthereum from './headerComponents/LoginEthereum'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n  user_address: state.eth.user_address\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: NUMBER => dispatch(globalActions.setPage(NUMBER))\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n  }\n  \n  render() {\n    const { \n      classes, \n      user_address \n    } = this.props;\n\n    const short_name = user_address ? user_address.substring(0,8) : \"\"\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                Ropsten Faucet \n                <Button \n                  onClick={this.goToMainPage}\n                >\n                  <span role=\"img\" aria-label=\"Sake\">\n                  🍶\n                  </span>\n                </Button> \n                {short_name}\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginEthereum />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n    } = this.props;\n\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography> \n                You are connected to Ethereum as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n\n);\n\nexport default EtherscanLogo;\n","const commonConfig = {\n    // server_url: \"http://localhost:5000/\",\n    server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\",\n    infura_public_key: \"c7b70fc4ec0e4ca599e99b360894b699\"\n}\n\nexport default commonConfig","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.error('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        // API CALL\n        let response\n        try {\n          response = await axios.post(\n            MINTER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            minting: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n  }","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance))\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        this.props.setEthBalance(short_balance)\n    }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n    // Update user balance\n    await this._updateUserBalance(this.props.eth_address)\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            <Typography> \n              Your CUSD balance: {balance_cusd}\n            </Typography>\n          </Paper>\n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        // TODO: Each pending transfer should have a Number:transfer_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            transferring: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n        \n        let response\n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            transferring: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n        {/* TRANSFER CUSD  */}\n            { !eth_address ?\n            (\n            <Button disabled>Please sign in trade CUSD!</Button>\n            )\n            : (\n            <div>\n            <form>\n                <TextField\n                id=\"transfer-to\"\n                label=\"Transfer To\"\n                className={classes.textField}\n                value={this.state.transfer_to}\n                onChange={this.handleChange('transfer_to')}\n                margin=\"normal\"\n                />\n                <TextField\n                id=\"transfer-amount\"\n                label=\"Amount\"\n                type=\"number\"\n                className={classes.textField}\n                value={this.state.amount_to_transfer}\n                onChange={this.handleChange('amount_to_transfer')}\n                margin=\"normal\"\n                />\n            </form>\n            <Button\n                onClick={this.handleClick_Transfer}\n                disabled={\n                this.state.transferring ||\n                !this.state.transfer_to ||\n                isNaN(this.state.amount_to_transfer) ||\n                this.state.amount_to_transfer <= 0\n                }\n                variant=\"contained\"\n                color=\"secondary\"\n            >\n                Transfer {this.state.amount_to_transfer ? this.state.amount_to_transfer : \"\"} CUSD\n            </Button>\n            </div>\n            )\n            }\n        {/* TRANSFER TXNS  */}\n        { pending_transfers.length > 0 ? (\n        <div>\n            <Typography> \n            Your transfer transactions: \n            </Typography>\n            {pending_transfers.map((pending_hash, i) => {\n            return (<Typography key={i}> \n                <EtherscanLogo /> ({i}): \n                <a\n                href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                >\n                {\" track on Etherscan\"}\n                </a>\n            </Typography>)\n            })}\n        </div> ) : (\"\")}\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response \n        try {\n          response = await axios.post(\n            RELAYER_ENDPOINT,\n            post_data\n          );\n        } catch (err) {\n          this.setState({\n            burning: false\n          })\n          console.error(\"please be patient in between transactions\") ;\n          return ; \n        }\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={this.state.amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    this.state.burning ||\n                    isNaN(this.state.amount_to_burn) ||\n                    this.state.amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {this.state.amount_to_burn ? this.state.amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Core Wallet Components\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\n\nconst styles = theme => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    return (\n          <div>\n            {/* USER IDENTITY  */}\n            <Accounts />\n            {/* MINT */}\n            <MintButton />\n            {/* USER BALANCES  */}\n            <Balances />\n            {/* TRANSFER */}\n            <TransferButton />\n            {/* BURN */}\n            <BurnButton />\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(withStyles(styles)(HomePage));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = randomWallet\n    if (password) {\n        encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    }\n    return encryptedJson\n}\n\nexport default createAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewEthAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            password: '',\n            confirm_password: '',\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n        let account_password = this.state.password\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth(account_password)\n\n            let new_eth_address \n            if (Boolean(account_password)) {\n                // If user provided a password, use helper function to get address from encrypted wallet\n                new_eth_address = getJsonAddress(new_account_json)\n            } else {\n                new_eth_address = new_account_json.address\n            }\n            let new_account = {\n                address: new_eth_address,\n                wallet: {\n                    json: new_account_json,\n                    encrypted: Boolean(account_password)\n                }\n            }\n            this.props.addEthAccount(new_account)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management coming imminently')\n        } else {\n            alert('Sorry, we are looking to implement this network soon!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            password,\n            confirm_password,\n            creating_account\n        } = this.state\n\n        const validPassword = Boolean(password === confirm_password)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new account</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        Please enter a new password\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {password && \n                    (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />)}\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={!validPassword}\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewEthAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewEthAccountDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewEthAccountDialog from './NewEthAccountDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n    } = this.props;\n    const {\n      open_new_account_dialog\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Accounts</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                <Typography> \n                  Your Ethereum accounts: \n                </Typography>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewEthAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Accounts</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                <Typography> \n                  Your EOS accounts: \n                </Typography>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\n// Helpers JSX\nimport Loading from '../helpers/Loading'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n});\n\nclass NewIdentityDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            confirm_password: '',\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let account_password = this.state.password\n        this.setState({\n            creating_account: true\n        })\n        this.setState({\n            creating_account: false\n        })\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            username,\n            password,\n            confirm_password,\n            creating_account\n        } = this.state\n\n        const validPassword = Boolean(password === confirm_password)\n        const validUsername = Boolean(username)\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new account</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        Select a username\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"name\"\n                        onChange={this.handleChange('username')}\n                        fullWidth\n                    />\n                    { validUsername && (<TextField\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />) }\n                    {password && \n                    (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />)}\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (<Loading />) : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={!validPassword}\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewIdentityDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewIdentityDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\nimport NewIdentityDialog from './accountsComponents/NewIdentityDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      openIdentityDialog: false\n    };\n  }\n\n  generateNewIdentity = () => {\n    this.setState({\n      openIdentityDialog: true\n    })\n  }\n\n  closeIdentityDialog = () => {\n    this.setState({\n      openIdentityDialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n    const {\n      openIdentityDialog\n    } = this.state;\n\n    const wallet_name = \"Burner Wallet\"\n    const hover_text = \"This wallet will self-destruct when you leave the page. Click this button to save your accounts between sessions.\"\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Tooltip title={hover_text} placement=\"top\">\n              <Typography variant=\"subtitle1\" className={classes.section}> \n                  <Button \n                    color=\"primary\" \n                    aria-label=\"New Account\"\n                    onClick={this.generateNewIdentity}\n                  >\n                    <AddIcon />\n                    {wallet_name}\n                  </Button>\n              </Typography>\n            </Tooltip>\n            <NewIdentityDialog open={openIdentityDialog} onCloseHandler={this.closeIdentityDialog} />\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a Global Digital Market</b>: This is the embodiment of our cross-chain open-source wallet initiative where we intend to link user \n                identities with cryptonetwork accounts. We support: Ethereum, EOS.\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Ropsten Faucet</b>: Mint, transfer, and redeem CUSD via our token faucet. CUSD on Ropsten was <i>made for developers</i> and experimental minds \n                curious how cryptoeconomics succeed at scale. Being able to assume that 1 CUSD == $1 will make fiscal forecasting simpler. 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>MetaTransactions</b>: We are powered by \"metatransactions\", in which users do not have to pay ETH transaction fees on this portal.  We pay your ETH gas fees, you pay us back in CUSD. 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No cryptonetwork account? No problem, you can create a <i>burner</i> account\n                through our management portal. We will <b>never</b> store your keys or passwords because these burner accounts were designed to self-destruct.\n                For top security, move CUSD to a more secure cold-storage wallet like Scatter or Metamask! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"./store/globalActions\";\n\n// WEB3 Services\nimport Web3 from 'web3';\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\n\n// Config \nimport config from './config'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  web3: state.global.web3,\n  page: state.global.page,\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** SET UP WEB3 */\n  // Detect or set window.web3 ethereum connection\n  setWindowWeb3 = async () => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            \n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n        } catch (error) {\n            // User denied account access...\n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n    }\n    // Non-dapp browsers...\n    else {\n        var WEB_3_NODE = ('wss://ropsten.infura.io/ws/v3/'+config.infura_public_key)\n        let non_provider_web3 = new Web3(new Web3.providers.WebsocketProvider(WEB_3_NODE));\n        this.props.setWeb3(non_provider_web3)\n    }\n  }\n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n    // Request user's web3 connection\n    await this.setWindowWeb3() \n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}