{"version":3,"sources":["store/ethActions.js","store/ethReducers.js","store/globalActions.js","store/globalReducers.js","store/accountsActions.js","store/accountsReducers.js","store/store.js","withRoot.js","components/headerComponents/HeaderMenu.js","eth_services/signMessage.js","eth_services/recoverMessageSigner.js","eth_services/unlockAccount.js","eth_services/createSignerWallet.js","components/headerComponents/SelectAccountEthereum.js","components/headerComponents/LoginEthereum.js","components/Header.js","components/homePageComponents/Accounts.js","components/helpers/EtherscanLogo.js","config.js","components/homePageComponents/MintButton.js","eth_services/getCUSD.js","eth_services/updateUserBalance.js","components/homePageComponents/Balances.js","eth_services/sendCUSD.js","components/homePageComponents/TransferButton.js","eth_services/burnCUSD.js","components/homePageComponents/BurnButton.js","components/HomePage.js","eth_services/createAccount.js","eth_services/getJsonAddress.js","components/accountsComponents/NewAccountDialog.js","components/accountsComponents/EthAccounts.js","components/helpers/BloksLogo.js","components/accountsComponents/EosAccounts.js","components/AccountsPage.js","components/InformationPage.js","App.js","serviceWorker.js","index.js"],"names":["TYPES","ethActions","string","type","object","initialState","eth","user_address","user_wallet","balance_cusd","pending_mints","pending_transfers","pending_burns","PAGES","MAIN","ACCOUNTS","INFO","globalActions","number","global","web3","page","NETWORKS","ETH","EOS","accountsActions","account","eth_accounts","eos_accounts","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","assign","concat","accounts","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","styles","es","store","CssBaseline_default","HeaderMenu","anchorEl","handleMenu","event","_this","setState","currentTarget","handleClose","goToMainPage","setPage","goToAccountsPage","goToInfoPage","this","open","Boolean","IconButton_default","aria-owns","aria-haspopup","onClick","color","Info_default","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","React","connect","dispatch","withStyles","signMessage","_ref","asyncToGenerator","regenerator_default","mark","_callee","dataToSign","from","signer_wallet","privateKey","sig","wrap","_context","prev","next","abrupt","sign","signature","alert","Promise","resolve","reject","personal","err","stop","_x","_x2","_x3","_x4","apply","recoverMessageSigner","message","user","recover","sent","callback_decrypt","progress","percentComplete","parseInt","console","log","unlockWallet","encryptedJsonFile","password","data","ethers","Wallet","fromEncryptedJson","t0","createSignerWallet","decryptedJson","findJsonFromAddress","address","array","i","json_encrypted","SelectAccountEthereum","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleEntering","radioGroupRef","focus","signInToSelectedAccount","selectedAddress","encryptedJson","unlockedAccount","value","unlocking","password_error","unlockAccountEth","createWalletFromUnlockedJson","setEthWallet","setEthAddress","onCloseHandler","error","handleChangeDialog","handleChangeForm","name","defineProperty","target","_this2","_this$props","classes","other","objectWithoutProperties","_this$state","selectFormHelperText","substring","Dialog_default","onEntering","DialogTitle_default","DialogContent_default","RadioGroup_default","ref","aria-label","onChange","map","FormControlLabel_default","key","control","Radio_default","label","TextField_default","autoFocus","margin","fullWidth","helperText","DialogActions_default","Button_default","disabled","CircularProgress_default","variant","disableShrink","className","facebook2","size","thickness","wallet","animationDuration","position","left","LoginEthereum","handleClick_LoginMenu","loginMetaMask","messageToSign","signer","signing_in","getAccounts","amount_to_mint","window","loginCarbonWallet","openSelectDialog","logout","closeSelectDialog","headerComponents_SelectAccountEthereum","Header","AppBar_default","Toolbar_default","headerComponents_HeaderMenu","Typography_default","grow","role","headerComponents_LoginEthereum","flexGrow","Accounts","eth_address","user_short","Paper_default","paper","elevation","href","rel","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","marginLeft","marginRight","EtherscanLogo","style","height","width","alt","src","commonConfig","server_url","MINTER_ENDPOINT","config","MintButton","handleClick_Mint","amountToMint","to","post_data","minter_status","response","pending_hash","utils","toWei","isAddress","amount","toString","minting","axios","get","minter_balance","post","concatPendingMints","helpers_EtherscanLogo","newMint","getCUSD","abi","require","Contract","updateUserBalance","cusd","balance","short_balance","methods","balanceOf","fromWei","Balances","_updateUserBalance","setEthBalance","componentDidMount","_callee2","intervalId","_context2","setInterval","timer","_callee3","_context3","componentWillUnmount","clearInterval","sendCUSD","eth_wallet","_web3$utils","crafted_transaction","nonce","metatoken","reward","metaTx","hash","isNaN","transfer","replayNonce","options","Math","estimateGas","t1","t2","ceil","toTwosComplement","soliditySha3","transferRecipient","signerNonce","t3","_x5","RELAYER_ENDPOINT","TransferButton","handleClick_Transfer","amountToTransfer","relayer_status","amount_to_transfer","transfer_to","transferring","balance_relayer","concatPendingTransfers","handleChange","textField","newTransfer","burnCUSD","stablecoin","burnCarbonDollar","BurnButton","handleClick_Burn","_web","amountToBurn","amount_to_burn","burning","concatPendingBurns","newBurn","HomePage","homePageComponents_Accounts","homePageComponents_MintButton","homePageComponents_Balances","homePageComponents_TransferButton","homePageComponents_BurnButton","callback_encrypt","createAccount","randomWallet","createRandom","encrypt","getJsonAddress","getJsonWalletAddress","NewAccountDialog","generateNewAccount","network","account_password","new_account_json","new_eth_address","new_account","creating_account","createAccount_eth","addEthAccount","confirm_password","validPassword","aria-labelledby","DialogContentText_default","newAccount","EthAccounts","handleClick_AddEthAccount","open_new_account_dialog","handleClose_AddEthAccount","section","accountsComponents_NewAccountDialog","textAlign","BloksLogo","EosAccounts","handleClick_AddEosAccount","addEosAccount","helpers_BloksLogo","AccountsPage","accountsComponents_EthAccounts","accountsComponents_EosAccounts","InformationPage","App","setWindowWeb3","ethereum","Web3","enable","setWeb3","currentProvider","root","components_Header","components_HomePage","information","components_InformationPage","components_AccountsPage","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ad72af8.chunk.js","sourcesContent":["// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_ETH_ADDRESS: \"SET_ETH_ADDRESS\",\n  SET_ETH_WALLET: \"SET_ETH_WALLET\",\n  SET_ETH_BALANCE: \"SET_ETH_BALANCE\",\n  CONCAT_PENDING_MINTS: \"CONCAT_PENDING_MINTS\",\n  CONCAT_PENDING_TRANSFERS: \"CONCAT_PENDING_TRANSFERS\",\n  CONCAT_PENDING_BURNS: \"CONCAT_PENDING_BURNS\",\n};\n\nexport const ethActions = {\n  setEthAddress: string => ({\n    type: TYPES.SET_ETH_ADDRESS,\n    string\n  }),\n  // Set user eth account\n\n  setEthWallet: object => ({\n    type: TYPES.SET_ETH_WALLET,\n    object\n  }),\n  // Set user eth wallet that they can sign messages from\n\n  setEthBalance: string => ({\n    type: TYPES.SET_ETH_BALANCE,\n    string\n  }),\n  // Set cusd-eth balance\n\n  concatPendingMints: object => ({\n    type: TYPES.CONCAT_PENDING_MINTS,\n    object\n  }),\n  // Add a pending mint transaction to user profile\n\n  concatPendingTransfers: object => ({\n    type: TYPES.CONCAT_PENDING_TRANSFERS,\n    object\n  }),\n  // Add a pending transfer transaction to user profile\n\n  concatPendingBurns: object => ({\n    type: TYPES.CONCAT_PENDING_BURNS,\n    object\n  }),\n  // Add a pending burn transaction to user profile\n\n\n};\n\n","import { TYPES } from \"./ethActions\";\n\n// Initial state\nexport const initialState = {\n  eth: {\n    user_address: '',\n    user_wallet: '',\n    balance_cusd: '',\n    pending_mints: [],\n    pending_transfers: [],\n    pending_burns: [],\n  },\n};\n\n// User Ethereum account state\nexport const eth = (state = initialState.eth, action) => {\n  switch (action.type) {\n    case TYPES.SET_ETH_ADDRESS:\n      return Object.assign({}, state, {\n        user_address: action.string\n      });\n    case TYPES.SET_ETH_WALLET:\n      return Object.assign({}, state, {\n        user_wallet: action.object\n      });\n    case TYPES.SET_ETH_BALANCE:\n      return Object.assign({}, state, {\n        balance_cusd: action.string\n      });\n    case TYPES.CONCAT_PENDING_MINTS:\n      return Object.assign({}, state, {\n        pending_mints: state.pending_mints.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_TRANSFERS:\n      return Object.assign({}, state, {\n        pending_transfers: state.pending_transfers.concat(action.object)\n      });\n    case TYPES.CONCAT_PENDING_BURNS:\n      return Object.assign({}, state, {\n        pending_burns: state.pending_burns.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  SET_WEB3: \"SET_WEB3\",\n  SET_PAGE: \"SET_PAGE\"\n};\n\n// Page options for main site\nexport const PAGES = {\n  MAIN: 0,\n  ACCOUNTS: 1,\n  INFO: 2\n}\n\nexport const globalActions = {\n  setPage: number => ({\n    type: TYPES.SET_PAGE,\n    number\n  }), \n  // Set Page\n\n  setWeb3: object => ({\n    type: TYPES.SET_WEB3,\n    object\n  }), \n  // Set Web3 object\n};\n\n","import { TYPES, PAGES } from \"./globalActions\";\n\n// Initial state\nexport const initialState = {\n  global: {\n    web3: '',\n    page: PAGES.MAIN,\n  },\n};\n\n// Global app state\nexport const global = (state = initialState.global, action) => {\n  switch (action.type) {\n    case TYPES.SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.object\n      });\n    case TYPES.SET_PAGE:\n      return Object.assign({}, state, {\n        page: action.number\n      });\n    default:\n      return state;\n  }\n};\n\n","// List of all actions that can be dispatched to redux store\nexport const TYPES = {\n  ADD_ETH_ACCOUNT: \"ADD_ETH_ACCOUNT\",\n  ADD_EOS_ACCOUNT: \"ADD_EOS_ACCOUNT\",\n};\n\n// Mapping of all blockchain networks that accounts can exist on\nexport const NETWORKS ={\n  ETH: 0,\n  EOS: 1\n}\n\nexport const accountsActions = {\n  addEthAccount: object => ({\n    type: TYPES.ADD_ETH_ACCOUNT,\n    object\n  }),\n  // add an ETH account object\n\n  addEosAccount: object => ({\n    type: TYPES.ADD_EOS_ACCOUNT,\n    object\n  }),\n  // add an EOS account object\n\n};\n\n","import { TYPES } from \"./accountsActions\";\n\n// Initial state\nexport const initialState = {\n  account: {\n      eth_accounts: [],\n      eos_accounts: [],\n  },\n};\n\n// Account/Identity management state\nexport const accounts = (state = initialState.account, action) => {\n  switch (action.type) {\n    case TYPES.ADD_ETH_ACCOUNT:\n      return Object.assign({}, state, {\n        eth_accounts: state.eth_accounts.concat(action.object)\n      });\n    case TYPES.ADD_EOS_ACCOUNT:\n      return Object.assign({}, state, {\n        eos_accounts: state.eos_accounts.concat(action.object)\n      });\n    default:\n      return state;\n  }\n};\n\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n// import logger from \"redux-logger\"; // Debuggin: prints redux actions to console\n\n// Redux Reducers to add to global state\nimport { eth } from \"./ethReducers\";\nimport { global } from \"./globalReducers\";\nimport { accounts } from \"./accountsReducers\";\n\n\n// Add all reducers here to aggregate into one store\nconst rootReducer = combineReducers({\n  eth,\n  global,\n  accounts\n});\n\n// Import store from createStore() => store\nexport default createStore(rootReducer, {}, applyMiddleware(thunk));\n","import React from 'react';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}> \n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...props} />\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Info from '@material-ui/icons/Info';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"../../store/globalActions\";\n\nconst styles = {\n};\n\nconst mapState = state => ({\n  page: state.global.page\n})\n\nconst mapDispatch = dispatch => ({\n  setPage: number => dispatch(globalActions.setPage(number))\n});\n\nclass HeaderMenu extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** PAGE SELECTOR: see globalActions.PAGES for more details */\n  goToMainPage = () => {\n      this.props.setPage(PAGES.MAIN)\n      this.handleClose()\n  }\n\n  goToAccountsPage = () => {\n      this.props.setPage(PAGES.ACCOUNTS)\n      this.handleClose()\n  }\n\n  goToInfoPage = () => {\n      this.props.setPage(PAGES.INFO)\n      this.handleClose()\n  }\n  /** END PAGE SELECTOR */\n\n\n  render() {\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n        <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Info />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.goToMainPage}>Home</MenuItem>\n                  <MenuItem onClick={this.goToAccountsPage}>Accounts</MenuItem>\n                  <MenuItem onClick={this.goToInfoPage}>Information</MenuItem>\n                </Menu>\n        </div>\n\n    );\n  }\n}\n\nHeaderMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(HeaderMenu));","// Request user to cryptographically sign a message\nexport const signMessage = async (web3, dataToSign, from, signer_wallet) => {\n    if (!web3) return;\n\n    // If passed in the optional parameter \"signer_wallet\", then use this wallet to sign message\n    if (signer_wallet) {\n        let privateKey = signer_wallet.privateKey\n        let sig = web3.eth.accounts.sign(dataToSign, privateKey)\n        return sig.signature\n    } else {\n      // Else ask injected web3 provider to sign\n      alert('Welcome to the CUSD faucet! Please sign the message to sign in, or authenticate your Transfer or Redemption of CUSD. We will broadcast all of your transactions, so there is no need to hold any ETH.')\n      return new Promise((resolve, reject) =>\n        web3.eth.personal.sign(\n          dataToSign,\n          from,\n          (err, signature) => {\n            if (err) return reject(err);\n            return resolve(signature);\n          }\n        )\n      );\n    }\n  };","  // Get user who signed a message\n  export const recoverMessageSigner = async (\n      web3,\n      message,\n      signature\n  ) => {\n      if (!web3) return;\n      let user = await web3.eth.accounts.recover(\n        message, signature\n      )\n      return user\n  }","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\nfunction callback_decrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Decrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Decrypt walletJSON file with password\nconst unlockWallet = async (encryptedJsonFile, password) => {\n    try {\n        let data = encryptedJsonFile\n        return await ethers.Wallet.fromEncryptedJson(data, password, callback_decrypt)\n    } catch(err) {\n        throw err\n    }\n}\n\nexport default unlockWallet","import { ethers } from 'ethers';\n\n// Create a wallet object capable of signing transaction\nconst createSignerWallet = (decryptedJson) => {\n    let privateKey = decryptedJson.privateKey\n    let wallet = new ethers.Wallet(privateKey)\n    return wallet\n}\n\nexport default createSignerWallet\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Unlock an account with a password\nimport unlockAccountEth from '../../eth_services/unlockAccount'\n\n// Get wallet object capable of signing transactions from a decrypted wallet json\nimport createWalletFromUnlockedJson from '../../eth_services/createSignerWallet'\n\nconst mapState = state => ({\n    eth_accounts: state.accounts.eth_accounts\n})\n\nconst mapDispatch = dispatch => ({\n    setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n    setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n\nconst findJsonFromAddress = (address, array) => {\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].address === address) {\n            return array[i].json_encrypted\n        }\n    }\n}\n\nclass SelectAccountEthereum extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      value: '',\n      password: '',\n      unlocking: false,\n      password_error: false\n    };\n  }\n\n  handleEntering = () => {\n    this.radioGroupRef.focus();\n  };\n\n  signInToSelectedAccount = async () => {\n    let selectedAddress = this.state.value\n    let password = this.state.password\n    let encryptedJson = findJsonFromAddress(selectedAddress, this.props.eth_accounts)\n\n    try {\n        this.setState({\n            unlocking: true,\n            password_error: false\n        })\n        let unlockedAccount = await unlockAccountEth(encryptedJson, password)\n        this.setState({\n            unlocking: false\n        })\n        // Save account, wallet, and close dialog\n        let signer_wallet = createWalletFromUnlockedJson(unlockedAccount) \n        this.props.setEthWallet(signer_wallet)         \n        this.props.setEthAddress(unlockedAccount.address) \n        this.props.onCloseHandler()\n    } catch (err) {\n        this.setState({\n            unlocking: false,\n            password_error: true\n        })\n        // Alert user that wrong password\n        console.error('ERROR: could not unlock account')\n    }\n  }\n\n  handleChangeDialog = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeForm = name => event => {\n    this.setState({\n        [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { \n        open, \n        classes,\n        onCloseHandler,\n        eth_accounts, \n        ...other } = this.props;\n    const {\n        value,\n        password,\n        unlocking,\n        password_error\n    } = this.state\n    const selectFormHelperText = (\n        password_error ? \n        \"incorrect password\" : \n        \"password for: \" + value.substring(0,12)+ \"...\"\n    )\n\n    return (\n      <Dialog\n        onEntering={this.handleEntering}\n        open={open}\n        onClose={onCloseHandler}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Your Ethereum Accounts</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            ref={ref => {\n              this.radioGroupRef = ref;\n            }}\n            aria-label=\"Account\"\n            name=\"account_address\"\n            value={value}\n            onChange={this.handleChangeDialog}\n          >\n            {eth_accounts.map(account => (\n              <FormControlLabel value={account.address} key={account.address} control={<Radio />} label={account.address.substring(0,12)+\"...\"} />\n            ))}\n          </RadioGroup>\n          {value && (<TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={this.handleChangeForm('password')}\n            fullWidth\n            helperText={selectFormHelperText}\n          />)}\n        </DialogContent>\n        <DialogActions>\n          { !unlocking && (<Button onClick={onCloseHandler} color=\"primary\">\n            Cancel\n          </Button>) }\n          { unlocking ?\n            (<Button\n                disabled\n                color=\"primary\"\n            >\n                <CircularProgress\n                    variant=\"indeterminate\"\n                    disableShrink\n                    className={classes.facebook2}\n                    size={24}\n                    thickness={4}\n                />\n            </Button>) \n            : \n            (<Button \n                onClick={this.signInToSelectedAccount} \n                disabled={!password}\n                color=\"primary\"\n            >\n                Unlock\n            </Button>)\n          }\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSelectAccountEthereum.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired\n  };\n  \nexport default connect(mapState, mapDispatch)(withStyles(styles)(SelectAccountEthereum));","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n// WEB3 Services\nimport { signMessage } from '../../eth_services/signMessage'\nimport { recoverMessageSigner } from '../../eth_services/recoverMessageSigner'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\nimport SelectAccountEthereum from \"./SelectAccountEthereum\"\n\nconst styles = theme => ({\n});\n\nconst mapState = state => ({\n  web3: state.global.web3,\n  eth_accounts: state.accounts.eth_accounts,\n})\n\nconst mapDispatch = dispatch => ({\n  setEthAddress: address => dispatch(ethActions.setEthAddress(address)),\n  setEthWallet: wallet => dispatch(ethActions.setEthWallet(wallet))\n});\n\nclass LoginEthereum extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      signing_in: false,\n      anchorEl: null,\n      openSelectDialog: false\n    };\n  }\n\n  /** ASK USER TO SELECT LOGIN METHOD */\n  handleClick_LoginMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  /** LOGIN HANDLERS */\n  // Ask user to authenticate their keypair\n  loginMetaMask = async () => {\n    this.setState({\n      signing_in: true\n    })\n    this.handleClose()\n    \n    let web3 = this.props.web3\n    if ( web3 ) {\n      try {\n        let accounts = await web3.eth.getAccounts()\n        let user = accounts[0]\n\n        let messageToSign = \"Welcome to the Carbon CUSD faucet! Please sign this message to verify that you are who you say you are, and we'll mint you \" \n                            + this.state.amount_to_mint \n                            + \" CUSD.\"\n        let sig = await signMessage(web3, messageToSign, user)\n        let signer = await recoverMessageSigner(\n          window.web3,\n          messageToSign,\n          sig\n        )\n        this.props.setEthAddress(signer)\n        this.props.setEthWallet('') // FIXME: !Only a Carbon account should have a signer-wallet via ethers.js!\n        this.setState({\n          signing_in: false\n        })\n      } catch (err) {\n        console.error('user could not sign message')\n        this.setState({\n          signing_in: false\n        })\n      }\n    } else {\n      // No web3 injected\n      alert('Cannot connect to Ethereum, are you using a dapp-enabled browser?')\n      this.setState({\n        signing_in: false\n      })\n    }\n  }\n\n  // Ask user to select a Carbon wallet (created in Accounts page)\n  loginCarbonWallet = () => {\n    this.handleClose()\n    if ( this.props.eth_accounts.length > 0 ) {\n        this.setState({\n            openSelectDialog: true\n        })\n    }\n    else {\n        alert('Go to the \"Accounts\" page to create an account!')\n    }\n  }\n\n  // Clear user address\n  logout = () => {\n      this.props.setEthAddress('')\n      this.props.setEthWallet('')\n      this.handleClose()\n  }  \n\n  /** ALWAYS CALL HANDLECLOSE() AFTER EACH LOGIN HANDLER */\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  /** HANDLER FOR CLOSING SELECT DIALOG */\n  closeSelectDialog = () => {\n      this.setState({\n          openSelectDialog: false\n      })\n  }\n\n  render() {\n    const { anchorEl, openSelectDialog } = this.state;\n    return (\n        <div>\n            <Button\n                aria-owns={anchorEl ? 'simple-menu' : undefined}\n                aria-haspopup=\"true\"\n                onClick={this.handleClick_LoginMenu}\n                disabled={this.state.signing_in}\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Sign In to Ethereum\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={this.handleClose}\n            >\n                <MenuItem onClick={this.loginMetaMask}>Injected Web3</MenuItem>\n                <MenuItem onClick={this.loginCarbonWallet}>Temporary Accounts</MenuItem>\n                <MenuItem onClick={this.logout}>Logout</MenuItem>\n            </Menu>\n            <SelectAccountEthereum open={openSelectDialog} onCloseHandler={this.closeSelectDialog}/>\n        </div>\n    );\n  }\n}\n\nLoginEthereum.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(LoginEthereum)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// Redux state\nimport { connect } from \"react-redux\";\n\n// Custom Components\nimport HeaderMenu from './headerComponents/HeaderMenu'\nimport LoginEthereum from './headerComponents/LoginEthereum'\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n});\n\nconst mapState = state => ({\n})\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n  \n  render() {\n    const { classes } = this.props;\n\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderMenu />\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Ropsten Faucet <span role=\"img\" aria-label=\"Sake\">🍶</span>\n            </Typography>\n            {/* REQUEST USER SIGNATURE */}\n            <LoginEthereum />\n          </Toolbar>\n        </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(Header)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass Accounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_address, \n    } = this.props;\n\n    const user_short = eth_address ? eth_address.substring(0, 8) : \"\" \n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n            <Typography> \n                You are connected to Ethereum as: \n                    {eth_address ? (<a\n                    href={\"https://ropsten.etherscan.io/address/\" + eth_address}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {user_short}...\n                    </a>) : (\"\")}\n            </Typography>\n        </Paper>\n    )\n  }\n}\n\nAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Accounts)));\n","import React from 'react';\n\nconst EtherscanLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Etherscan\"\n    src=\"https://db5islsn2p9x4.cloudfront.net/etherscan.png\"\n  />\n\n);\n\nexport default EtherscanLogo;\n","const commonConfig = {\n    server_url: \"http://localhost:5000/\",\n    // server_url: \"https://cusd-faucet-server-ropsten.herokuapp.com/\"\n};\n\nexport default commonConfig","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst MINTER_ENDPOINT = SERVER+\"api/faucet/minter\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  pending_mints: state.eth.pending_mints,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingMints: newMint => dispatch(ethActions.concatPendingMints(newMint)),\n});\n\nclass MintButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      amount_to_mint: \"10.3141\",\n      minting: false,\n    };\n  }\n\n  /** BUTTON CLICK HANDLERS */\n\n  // Mint new CUSD to user\n  handleClick_Mint = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToMint = web3.utils.toWei(this.state.amount_to_mint, 'ether')\n  \n      let to = this.props.eth_address\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: ', to)\n        return\n      }\n\n      let post_data = {\n        amount: amountToMint.toString(),\n        user: to\n      }\n\n      this.setState({\n        minting: true\n      })\n\n      try {\n        // TODO: Each pending mint should have a Number:mint_id, and a status: pending, failed, success\n        let minter_status = await axios.get(\n          MINTER_ENDPOINT\n        )\n        let minter_balance = minter_status.minter_balance\n        if (minter_balance <= 0) {\n          alert('Minter does not have enough eth to mint :(')\n          this.setState({\n            minting: false\n          })\n        }\n        let response = await axios.post(\n          MINTER_ENDPOINT,\n          post_data\n        );\n\n        let pending_hash = response.data.pending_hash\n        this.props.concatPendingMints(pending_hash)\n        this.setState({\n          minting: false\n        })\n      } catch (err) {\n        this.setState({\n          minting: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_mints\n    } = this.props;\n    \n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* MINT BUTTON  */}\n            { !eth_address ?\n              (\n                <Button disabled>Please sign in get CUSD!</Button>\n              )\n              : (\n                <Button\n                  onClick={this.handleClick_Mint}\n                  disabled={this.state.minting}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Mint me {this.state.amount_to_mint} CUSD\n                </Button>\n              )\n            }\n            {/* MINT TXNS  */}\n            { pending_mints.length > 0 ? (\n            <div>\n              <Typography> \n                Your mint transactions: \n              </Typography>\n              {pending_mints.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nMintButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(MintButton)));\n","// Fetch active CUSD instance\nexport const getCUSD = (web3) => {\n    if (!web3) return;\n    // Contract ABI's\n    const ABI = require(\"../contracts/MetaToken.json\");\n\n    // Contract Ropsten Addresses\n    const ADDRESS = \"0x67450c8908e2701abfa6745be3949ad32acf42d8\";\n\n    var jsonFile = ABI;\n    var abi = jsonFile.abi;\n    var deployedAddress = ADDRESS;\n    const instance = new web3.eth.Contract(abi, deployedAddress);\n    return instance;\n}","import { getCUSD } from './getCUSD'\n\n// Refresh user CUSD balance\nexport const updateUserBalance = async (web3, user) => {\n    if (web3 && user) {\n      let cusd = getCUSD(web3)\n      if (web3.utils.isAddress(user)) {\n        let balance = await cusd.methods.balanceOf(user).call()\n        let short_balance = web3.utils.fromWei(balance.toString(), 'ether')\n        return short_balance\n      } else {\n        return -1\n      }\n    } else {\n      return -1\n    }\n  }","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// WEB3 Services\nimport { updateUserBalance } from '../../eth_services/updateUserBalance'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  web3: state.global.web3,\n  balance_cusd: state.eth.balance_cusd\n});\n\nconst mapDispatch = dispatch => ({\n  setEthBalance: balance => dispatch(ethActions.setEthBalance(balance))\n});\n\nclass Balances extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  // Refresh user CUSD balance\n  _updateUserBalance = async (user) => {\n    let web3 = this.props.web3\n    if (!web3 || !user) return;\n    let short_balance = await updateUserBalance(web3, user)\n    if (short_balance >= 0 ) {\n        this.props.setEthBalance(short_balance)\n    }\n  }\n\n  /** CONTINUOUS TIMER BEGINNING AT MOUNT */\n  componentDidMount = async () => {\n    var intervalId = setInterval(this.timer, 1000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({intervalId: intervalId});\n  }\n\n  // @dev Put anything that you want to continually compute here\n  timer = async () => {\n    // Update user balance\n    await this._updateUserBalance(this.props.eth_address)\n  }\n\n  componentWillUnmount = () => {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  \n  render() {\n\n    const { \n      classes, \n      balance_cusd\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            <Typography> \n              Your CUSD balance: {balance_cusd}\n            </Typography>\n          </Paper>\n    );\n  }\n}\n\nBalances.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(Balances)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\n// Send amount of CUSD from user to another user\nexport const sendCUSD = async function(web3, from, to, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !to ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) ||\n    !web3.utils.isAddress(to)\n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }  \n\n  try {\n    let cusd = getCUSD(web3);\n\n    let crafted_transaction = cusd.methods.transfer(to, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaTransfer\",\n      to,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'transfer',\n      transferRecipient: to,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// WEB3 Services\nimport { sendCUSD } from '../../eth_services/sendCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from \"../../config\"\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_transfers: state.eth.pending_transfers,\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingTransfers: newTransfer => dispatch(ethActions.concatPendingTransfers(newTransfer)),\n});\n\nclass TransferButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transferring: false,\n      amount_to_transfer: '',\n      transfer_to: '',\n    };\n  }\n  \n  /** BUTTON CLICK HANDLERS */\n\n  // Transfer CUSD to another user\n  handleClick_Transfer = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let amountToTransfer = web3.utils.toWei(this.state.amount_to_transfer, 'ether')\n  \n      let from = this.props.eth_address\n      let to = this.state.transfer_to\n      if (!web3.utils.isAddress(to)) {\n        console.log('invalid user address: (to) ', to)\n        return\n      }\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        transferring: true\n      })\n\n      try {\n        // TODO: Each pending transfer should have a Number:transfer_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            minting: false\n          })\n        }\n\n        let post_data = await sendCUSD(web3, from, to, amountToTransfer, this.props.eth_wallet)\n\n        let response = await axios.post(\n          RELAYER_ENDPOINT,\n          post_data\n        );\n\n        let pending_hash = response.data.hash\n        this.props.concatPendingTransfers(pending_hash)\n        this.setState({\n          transferring: false\n        })\n      } catch (err) {\n        this.setState({\n          transferring: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_transfers\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n        {/* TRANSFER CUSD  */}\n            { !eth_address ?\n            (\n            <Button disabled>Please sign in trade CUSD!</Button>\n            )\n            : (\n            <div>\n            <form>\n                <TextField\n                id=\"transfer-to\"\n                label=\"Transfer To\"\n                className={classes.textField}\n                value={this.state.transfer_to}\n                onChange={this.handleChange('transfer_to')}\n                margin=\"normal\"\n                />\n                <TextField\n                id=\"transfer-amount\"\n                label=\"Amount\"\n                type=\"number\"\n                className={classes.textField}\n                value={this.state.amount_to_transfer}\n                onChange={this.handleChange('amount_to_transfer')}\n                margin=\"normal\"\n                />\n            </form>\n            <Button\n                onClick={this.handleClick_Transfer}\n                disabled={\n                this.state.transferring ||\n                !this.state.transfer_to ||\n                isNaN(this.state.amount_to_transfer) ||\n                this.state.amount_to_transfer <= 0\n                }\n                variant=\"contained\"\n                color=\"secondary\"\n            >\n                Transfer {this.state.amount_to_transfer ? this.state.amount_to_transfer : \"\"} CUSD\n            </Button>\n            </div>\n            )\n            }\n        {/* TRANSFER TXNS  */}\n        { pending_transfers.length > 0 ? (\n        <div>\n            <Typography> \n            Your transfer transactions: \n            </Typography>\n            {pending_transfers.map((pending_hash, i) => {\n            return (<Typography key={i}> \n                <EtherscanLogo /> ({i}): \n                <a\n                href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                >\n                {\" track on Etherscan\"}\n                </a>\n            </Typography>)\n            })}\n        </div> ) : (\"\")}\n        </Paper>\n    );\n  }\n}\n\nTransferButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(TransferButton)));\n","import { getCUSD } from './getCUSD'\nimport { signMessage } from './signMessage'\n\nconst WT0_ADDRESS = \"0xcd36463470c4b92700b4d5fbe270e680d9d48968\";\n\n// Burn amount of CUSD from user \nexport const burnCUSD = async function(web3, from, amount, eth_wallet) {\n  if (\n    !web3 ||\n    !from ||\n    !amount ||\n    isNaN(amount) ||\n    amount <= 0 ||\n    !web3.utils.isAddress(from) \n  ) {\n    console.error(\"invalid parameters passed\");\n    return;\n  }\n\n  try {\n    let cusd = getCUSD(web3);\n    let stablecoin = WT0_ADDRESS\n    let crafted_transaction = cusd.methods.burnCarbonDollar(stablecoin, amount);\n    let nonce = await cusd.methods.replayNonce(from).call();\n    let metatoken = cusd.options.address;\n    let reward = Math.ceil(\n      (await crafted_transaction.estimateGas({\n        from,\n      })) * 2.5\n    );\n\n    // Hash must be in this format: keccak256(abi.encodePacked(address(MetaToken),\"metaTransfer\", _to, _amount, _nonce, _reward));\n    // @devs: cast all signed ints to unsigned ints via web3.utils.toTwosComplement()\n    let metaTx = [\n      metatoken,\n      \"metaBurnCarbonDollar\",\n      stablecoin,\n      amount,\n      web3.utils.toTwosComplement(nonce),\n      web3.utils.toTwosComplement(reward)\n    ];\n\n    let hash = web3.utils.soliditySha3(...metaTx);\n    let sig = await signMessage(web3, hash, from, eth_wallet);\n\n    var post_data = {\n      type: 'burn',\n      stablecoin,\n      amount,\n      sig,\n      signerNonce: nonce,\n      reward,\n    };\n\n    return post_data\n\n  } catch (err) {\n    throw err;\n  }\n};","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { ethActions } from \"../../store/ethActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\n\n// WEB3 Services\nimport { burnCUSD } from '../../eth_services/burnCUSD'\n\n// REST API server\nimport axios from 'axios'\nimport config from '../../config'\nconst SERVER = config.server_url\nconst RELAYER_ENDPOINT = SERVER+\"api/faucet/relayer\"\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_address: state.eth.user_address,\n  eth_wallet: state.eth.user_wallet,\n  web3: state.global.web3,\n  pending_burns: state.eth.pending_burns\n});\n\nconst mapDispatch = dispatch => ({\n  concatPendingBurns: newBurn => dispatch(ethActions.concatPendingBurns(newBurn)),\n});\n\nclass BurnButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      burning: false,\n      amount_to_burn: ''\n    };\n  }\n  /** BUTTON CLICK HANDLERS */\n\n  // Redeem CUSD by burning\n  handleClick_Burn = async () => {\n    let web3 = this.props.web3\n    if (web3) {\n      let web3 = window.web3\n      let amountToBurn = web3.utils.toWei(this.state.amount_to_burn, 'ether')\n  \n      let from = this.props.eth_address\n      if (!web3.utils.isAddress(from)) {\n        console.log('invalid user address: (from) ', from)\n        return\n      }\n\n      this.setState({\n        burning: true\n      })\n\n      try {\n        // TODO: Each pending burn should have a Number:burn_id, and a status: pending, failed, success\n        let relayer_status = await axios.get(\n          RELAYER_ENDPOINT\n        )\n        let relayer_balance = relayer_status.balance_relayer\n        if (relayer_balance <= 0) {\n          alert('Relayer does not have enough eth to forward metatransfer :(')\n          this.setState({\n            burning: false\n          })\n        }\n\n        let post_data = await burnCUSD(web3, from, amountToBurn, this.props.eth_wallet)\n\n        let response = await axios.post(\n          RELAYER_ENDPOINT,\n          post_data\n        );\n        \n        let pending_hash = response.data.hash\n        this.props.concatPendingBurns(pending_hash)\n        this.setState({\n          burning: false\n        })\n\n      } catch (err) {\n        this.setState({\n          burning: false\n        })\n      }\n    }\n  }\n\n  /** END BUTTON CLICK HANDLERS */\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n\n    const { \n      classes, \n      eth_address,\n      pending_burns\n    } = this.props;\n\n    return (\n          <Paper className={classes.paper} elevation={3}>\n            {/* BURN CUSD  */}\n              { !eth_address ?\n              (\n                <Button disabled>Please sign in redeem CUSD!</Button>\n              )\n              : (\n                <div>\n                <form>\n                  <TextField\n                    id=\"burn-amount\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    className={classes.textField}\n                    value={this.state.amount_to_burn}\n                    onChange={this.handleChange('amount_to_burn')}\n                    margin=\"normal\"\n                  />\n                </form>\n                <Button\n                  onClick={this.handleClick_Burn}\n                  disabled={\n                    this.state.burning ||\n                    isNaN(this.state.amount_to_burn) ||\n                    this.state.amount_to_burn <= 0\n                  }\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Redeem {this.state.amount_to_burn ? this.state.amount_to_burn : \"\"} CUSD\n                </Button>\n                </div>\n              )\n              }\n            {/* BURN TXNS  */}\n            { pending_burns.length > 0 ? (\n            <div>\n              <Typography> \n                Your burn transactions: \n              </Typography>\n              {pending_burns.map((pending_hash, i) => {\n                return (<Typography key={i}> \n                  <EtherscanLogo /> ({i}): \n                  <a\n                    href={\"https://ropsten.etherscan.io/tx/\" + pending_hash}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {\" track on Etherscan\"}\n                  </a>\n                </Typography>)\n              })}\n            </div> ) : (\"\")}\n          </Paper>\n    );\n  }\n}\n\nBurnButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(BurnButton)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Core Wallet Components\nimport Accounts from './homePageComponents/Accounts'\nimport MintButton from './homePageComponents/MintButton'\nimport Balances from './homePageComponents/Balances'\nimport TransferButton from './homePageComponents/TransferButton'\nimport BurnButton from './homePageComponents/BurnButton'\n\nconst styles = theme => ({\n});\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    return (\n          <div>\n            {/* USER IDENTITY  */}\n            <Accounts />\n            {/* MINT */}\n            <MintButton />\n            {/* USER BALANCES  */}\n            <Balances />\n            {/* TRANSFER */}\n            <TransferButton />\n            {/* BURN */}\n            <BurnButton />\n          </div>\n    );\n  }\n}\n\nHomePage.propTypes = {\n};\n\nexport default withRoot(withStyles(styles)(HomePage));\n","import { ethers } from 'ethers';\n\n/** HELPER FUNCTIONS **/\n\n// See docs.ethers.io: If the progressCallback is specified, \n// it will be called periodically during encryption with a value between 0 and 1, \n// inclusive indicating the progress.\nfunction callback_encrypt(progress) {\n    let percentComplete = parseInt(progress * 100)\n    if ( percentComplete%20 === 0 ) {\n        console.log(\"Encrypting: \" + percentComplete + \"% complete\");\n    }\n}\n\n/** PUBLIC FUNCTIONS **/\n\n// Create a new random wallet and encrypt it in JSON form\n// @param password Password used to encrypt new JSON wallet\nconst createAccount = async (password) => {\n    let randomWallet = new ethers.Wallet.createRandom()\n    let encryptedJson = await randomWallet.encrypt(password, callback_encrypt);\n    return encryptedJson\n}\n\nexport default createAccount","import { ethers } from 'ethers';\n\n// Get the Wallet address from an encrypted JSON wallet\nconst getJsonAddress = (encryptedJson) => {\n    let data = encryptedJson.toString()\n    let address = ethers.utils.getJsonWalletAddress(data);\n    return address\n}\n\nexport default getJsonAddress\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withRoot from '../../withRoot';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions, NETWORKS } from \"../../store/accountsActions\";\n\n// ETH Account Management Helper functions\nimport createAccount_eth from '../../eth_services/createAccount'\nimport getJsonAddress from '../../eth_services/getJsonAddress'\n\nconst styles = theme => ({\n    facebook2: {\n        color: '#6798e5',\n        animationDuration: '550ms',\n        position: 'absolute',\n        left: 0,\n    },\n});\n  \n// Redux mappings\nconst mapState = state => ({\n});\n  \nconst mapDispatch = dispatch => ({\n    addEthAccount: newAccount => dispatch(accountsActions.addEthAccount(newAccount)),\n});\n\nclass NewAccountDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            password: '',\n            confirm_password: '',\n            creating_account: false\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    generateNewAccount = async () => {\n        let network = this.props.network\n        let account_password = this.state.password\n\n        if (network === NETWORKS.ETH) {\n            this.setState({\n                creating_account: true\n            })\n            let new_account_json = await createAccount_eth(account_password)\n\n            let new_eth_address = getJsonAddress(new_account_json)\n            let new_account = {\n                address: new_eth_address,\n                json_encrypted: new_account_json\n            }\n            this.props.addEthAccount(new_account)\n            this.setState({\n                creating_account: false\n            })\n        }\n        else if (network === NETWORKS.EOS) {\n            alert('EOS account management not implemented yet!')\n        } else {\n            alert('Sorry, we do not support this network yet!')\n        }\n\n        // Close\n        this.props.onCloseHandler()\n        return\n    }\n\n    render() {\n\n        const { \n            open, \n            onCloseHandler,\n            classes\n        } = this.props;\n        const {\n            password,\n            confirm_password,\n            creating_account\n        } = this.state\n\n        const validPassword = Boolean(password && confirm_password && (password === confirm_password))\n\n        return (\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={onCloseHandler}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Create new account</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        Please enter a new password\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('password')}\n                        fullWidth\n                    />\n                    {password && \n                    (<TextField\n                        margin=\"dense\"\n                        id=\"confirm-password\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        onChange={this.handleChange('confirm_password')}\n                        fullWidth\n                    />)}\n                    </DialogContent>\n                    <DialogActions>\n                    {creating_account ? (\"\") : \n                    (<Button onClick={onCloseHandler} color=\"primary\">\n                        Nevermind\n                    </Button>)}\n                    {creating_account ? \n                    (<Button\n                        disabled\n                        color=\"primary\"\n                    >\n                        <CircularProgress\n                            variant=\"indeterminate\"\n                            disableShrink\n                            className={classes.facebook2}\n                            size={24}\n                            thickness={4}\n                        />\n                    </Button>)\n                    : \n                    (<Button \n                        onClick={this.generateNewAccount} \n                        color=\"primary\"\n                        disabled={!validPassword}\n                    >\n                        Create\n                    </Button>)}\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nNewAccountDialog.propTypes = {\n    classes: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onCloseHandler: PropTypes.func.isRequired,\n    network: PropTypes.number.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(NewAccountDialog)));\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { NETWORKS } from \"../../store/accountsActions\";\n\n// Custom Components\nimport EtherscanLogo from '../helpers/EtherscanLogo'\nimport NewAccountDialog from './NewAccountDialog'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eth_accounts: state.accounts.eth_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass EthAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open_new_account_dialog: false\n    };\n  }\n\n  handleClick_AddEthAccount = async () => {\n    this.setState({\n      open_new_account_dialog: true\n    })\n  }\n\n  handleClose_AddEthAccount = () => {\n    this.setState({\n      open_new_account_dialog: false\n    })\n  }\n\n  render() {\n\n    const { \n      classes, \n      eth_accounts,\n    } = this.props;\n    const {\n      open_new_account_dialog\n    } = this.state\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>Eth Accounts</b>: \n              </Typography>\n              {/* Add Eth Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEthAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View Eth Accounts */}\n              { eth_accounts.length > 0 ? (\n              <div>\n                <Typography> \n                  Your Ethereum accounts: \n                </Typography>\n                {eth_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <EtherscanLogo /> ({i}): \n                    <a\n                      href={\"https://ropsten.etherscan.io/address/\" + account.address}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n              <NewAccountDialog \n                open={open_new_account_dialog} \n                onCloseHandler={this.handleClose_AddEthAccount} \n                network={NETWORKS.ETH}\n              />\n        </Paper >\n    )\n  }\n}\n\nEthAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EthAccounts)));\n","import React from 'react';\n\nconst BloksLogo = () => (\n  <img\n    style={{ height: \"20px\", width: \"auto\" }}\n    alt=\"Bloks.io\"\n    src=\"https://s3.amazonaws.com/carbon12/eoscafeblock.png\"\n  />\n);\n\nexport default BloksLogo;\n","import React, { Component } from 'react';\nimport withRoot from '../../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { accountsActions } from \"../../store/accountsActions\";\n\n// Custom Components\nimport BloksLogo from '../helpers/BloksLogo'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  eos_accounts: state.accounts.eos_accounts,\n});\n\nconst mapDispatch = dispatch => ({\n  addEosAccount: newAccount => dispatch(accountsActions.addEosAccount(newAccount)),\n});\n\nclass EosAccounts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  handleClick_AddEosAccount = async () => {\n    alert('EOS accounts coming soon 🤥')\n    let new_account = \"placeholder-\"+this.props.eos_accounts.length.toString()\n\n    this.props.addEosAccount(new_account)\n  }\n\n  render() {\n\n    const { \n      classes, \n      eos_accounts,\n    } = this.props;\n\n    return (\n        <Paper className={classes.paper} elevation={3}>\n              <Typography variant=\"body1\" className={classes.section}> \n                  <b>EOS Accounts</b>: \n              </Typography>\n              {/* Add EOS Accounts */}\n              <Button \n                variant=\"contained\" \n                onClick={this.handleClick_AddEosAccount}\n                disabled={false}\n              >\n                New\n              </Button>\n              {/* View EOS Accounts */}\n              { eos_accounts.length > 0 ? (\n              <div>\n                <Typography> \n                  Your EOS accounts: \n                </Typography>\n                {eos_accounts.map((account, i) => {\n                  return (<Typography key={i}> \n                    <BloksLogo /> ({i}): \n                    <a\n                      href={\"https://bloks.io/account/\" + account}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {\" view account\"}\n                    </a>\n                  </Typography>)\n                })}\n              </div> ) : (\"\")}\n        </Paper >\n    )\n  }\n}\n\nEosAccounts.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(EosAccounts)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { } from \"../store/accountsActions\";\n\n// Custom Components\nimport EthAccounts from './accountsComponents/EthAccounts'\nimport EosAccounts from './accountsComponents/EosAccounts'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n});\n\nconst mapDispatch = dispatch => ({\n});\n\nclass AccountsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"subtitle1\" className={classes.section}> \n                <b>Account Management</b>: (1) select network => (2) \"new\" || \"sign in\" || \"import\" \n            </Typography>\n            {/* ETH  */}\n            <EthAccounts />\n            {/* EOS  */}\n            <EosAccounts />\n        </Paper>\n        </div>\n    )\n  }\n}\n\nAccountsPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(withRoot(withStyles(styles)(AccountsPage)));\n","import React, { Component } from 'react';\nimport withRoot from '../withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nconst styles = theme => ({\n  paper: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 1,\n    marginLeft: theme.spacing.unit * 5,\n    marginRight: theme.spacing.unit * 5,\n  },\n  section: {\n    marginTop: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    textAlign: 'left'\n  }\n});\n\nclass InformationPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  render() {\n\n    const { \n      classes, \n    } = this.props;\n\n    return (\n        <div>\n        <Paper className={classes.paper} elevation={3}>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>A Universal Wallet for a True Digital Economy</b>: This is our cross-chain open-source wallet initiative where we intend to link user \n                identities (used for \"Know Your Customer\" compliance) with on-chain accounts across \n                multiple networks. Since this is a work in progress, for now we are only supporting\n                the Ropsten testnet for Ethereum. \n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>CUSD Ropsten Faucet</b>: Mint, transfer, and \"redeem\" CUSD via our faucet! CUSD on Ropsten is a super convenient token <i>made for developers</i> that\n                any cryptonetwork experiment will find useful. You can be confident knowing that one mainnet CUSD is equivalent to $1, which \n                should make forecasting simpler 👩🏽‍🚀\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>MetaTransactions</b>: We are excited to offer \"metatransactions\", where users do not need to hold any ETH to pay for transaction fees\n                when using CUSD. We pay your ETH gas fees, you compensate us in CUSD, and no one needs to hodl trivial amounts of ETH anymore 🧞‍\n            </Typography>\n            <Typography variant=\"body1\" className={classes.section}> \n                <b>Account Management</b>: No dApp browser? No idea what Ethereum or MetaMask is? No problem, you can create a <i>temporary</i> accounts\n                through our account management tool. We will <b>never</b> store your keys or passwords, and these wallets will disappear when you leave the page,\n                so please move any CUSD to a more secure cold-storage wallet! 🗝💵🗝\n            </Typography>\n        </Paper>\n        <Paper className={classes.paper} elevation={3}>\n            <a href=\"https://github.com/nicholaspai/cusd-faucet-client\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <Button variant=\"contained\" className={classes.section}> \n                Github Repo\n              </Button>\n            </a>\n        </Paper>\n        </div>\n    )\n  }\n}\n\nInformationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(withStyles(styles)(InformationPage));\n","import React, { Component } from 'react';\nimport './App.css';\nimport withRoot from './withRoot';\nimport PropTypes from 'prop-types';\n\n// Material-ui\nimport { withStyles } from '@material-ui/core/styles';\n\n// Redux state\nimport { connect } from \"react-redux\";\nimport { globalActions, PAGES } from \"./store/globalActions\";\n\n// WEB3 Services\nimport Web3 from 'web3';\n\n// Core Wallet Pages + Header\nimport Header from './components/Header'\nimport HomePage from './components/HomePage'\nimport AccountsPage from './components/AccountsPage'\nimport InformationPage from './components/InformationPage'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  main: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  information: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  },\n  accounts: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 5,\n  }\n});\n\n// Redux mappings\nconst mapState = state => ({\n  web3: state.global.web3,\n  page: state.global.page,\n});\n\nconst mapDispatch = dispatch => ({\n  setWeb3: web3 =>\n    dispatch(globalActions.setWeb3(web3)),\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  /** SET UP WEB3 */\n  // Detect or set window.web3 ethereum connection\n  setWindowWeb3 = async () => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        try {\n            // Request account access if needed\n            await window.ethereum.enable();\n            \n            // Store web3 instance in redux store\n            this.props.setWeb3(window.web3)\n        } catch (error) {\n            // User denied account access...\n            console.log('user denied ethereum account access')\n        }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        this.props.setWeb3(window.web3)\n    }\n    // Non-dapp browsers...\n    else {\n        alert('Non-Ethereum browser detected! This is not a problem, because we can create accounts for you, but we recommend getting a more secure cold-storage for the long-term.');\n    }\n  }\n\n  /** ACTIONS TO PERFORM ON LOAD */\n  componentDidMount = async () => {\n    // Request user's web3 connection\n    await this.setWindowWeb3() \n  }\n\n  render() {\n\n    const { \n      classes,\n      page \n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Header />\n        { page === PAGES.MAIN ? (\n          <div className={classes.main}>\n            <HomePage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.INFO ? (\n          <div className={classes.information}>\n            <InformationPage />\n          </div>\n        ): (\"\")}\n        { page === PAGES.ACCOUNTS ? (\n          <div className={classes.accounts}>\n            <AccountsPage />\n          </div>\n        ): (\"\")}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRoot(connect(mapState, mapDispatch)(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}